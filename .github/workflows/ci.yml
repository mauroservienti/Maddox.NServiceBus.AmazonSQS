name: CI
on:
  push:
    tags:
      - '[0-9].[0-9]+.[0-9]'
      - '[0-9].[0-9]+.[0-9]+-*'
    branches:
      - main
      - release-*
  pull_request:
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
jobs:
  documentation:
    name: Process documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4.1.0
    - name: Run MarkdownSnippets
      run: |
        dotnet tool install --global MarkdownSnippets.Tool
        mdsnippets ${GITHUB_WORKSPACE} -c InPlaceOverwrite
        git add .
      shell: bash
    - name: Fix links
      run: find ${GITHUB_WORKSPACE} -name "*.md" -not -name "*.source.md" -type f -exec sed -i '6,$s/\.source\.md/\.md/g' {} \;
      shell: bash
    - name: Push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "MarkdownSnippets documentation changes" -a  || echo "nothing to commit"
        remote="https://${GITHUB_ACTOR}:${{secrets.GITHUB_TOKEN}}@github.com/${GITHUB_REPOSITORY}.git"
        branch="${GITHUB_REF:11}"
        git push "${remote}" ${branch} || echo "nothing to push"
      shell: bash
  build:
    name: Build and test on ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-2019
            name: Windows
          - os: ubuntu-20.04
            name: Linux
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 0
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: |
            7.0.x
            6.0.x
      - name: Build
        run: dotnet build src --configuration Release
      - name: Tests
        run: dotnet test src --configuration Release --no-build
      - name: Upload packages
        if: matrix.name == 'Linux'
        uses: actions/upload-artifact@v3.1.3
        with:
          name: nuget-packages
          path: nugets/
          retention-days: 2
  release:
    needs: build
    name: Release to Feedz.io
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-20.04
    steps:
      - name: Setup .NET 6
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: 6.0.x
      - name: Download artifacts
        uses: actions/download-artifact@v3.0.2
        with:
          name: nuget-packages
          path: nugets/
      - name: Push package to Feedz.io
        run: dotnet nuget push ./nugets/*.nupkg --source https://f.feedz.io/mauroservienti/pre-releases/nuget --api-key ${{ secrets.FEEDZ_API_KEY }}
      - name: Push symbols to Feedz.io
        run: dotnet nuget push ./nugets/*.snupkg --source https://f.feedz.io/mauroservienti/pre-releases/symbols --api-key ${{ secrets.FEEDZ_API_KEY }}
